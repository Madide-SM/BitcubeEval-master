@model Bitcubeeval.Models.Booking

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div class="text-danger" id="hello">
            @if (ViewBag.Error != null)
            {
                <p>Error: @ViewBag.Error</p>
            }
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "LocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control", onchange = "checkDate()" } })
                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", onchange = "checkDate()" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumOfPeople, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumOfPeople, new { htmlAttributes = new { @class = "form-control", onchange = "checkNumPeople()" } })
                @Html.ValidationMessageFor(model => model.NumOfPeople, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create Booking" class="btn btn-primary" />
        </div>
    </div>
}
<script>
    function checkDate() {
        var selectedText = document.getElementById('EventDate').value;
        var selectedDate = new Date(selectedText);
        var now = new Date();
        if (selectedDate < now) {
            alert("Date must be in the future");
        }
    }
    function checkNumPeople() {
        var numpeople = document.getElementById('NumOfPeople').value;
        var htm = document.getElementById('hello');
        if (numpeople < 2) {
            alert("Minimum 2 People per Reservation");
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
